@page "/family"

@inject IFamilyService FamilyService
@inject ILogger<FetchData> logger

@using System.ComponentModel.DataAnnotations;
@using System.Linq;

@if (personList != null)
{
    <table class="table table-striped table-hover">
        <thead>
            <tr>
                <th>Name</th>
                <th>Age</th>
                <th>DOB</th>
                <th>City</th>
                <th>State</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var person in personList)
            {
                <tr>
                    <td>@person.FirstName.Trim() @person.LastName.Trim()</td>
                    <td>@person.Age</td>
                    <td>@person.DateOfBirth.ToString("MM-dd-yyyy")</td>
                    <td>@person.City</td>
                    <td>@GetBirthState(person)</td>
                    <td><button class="btn btn-primary" @onclick="(() => EditPerson(person))">Edit</button></td>
                </tr>
            }
        </tbody>
    </table>
    <button class="btn btn-primary" @onclick="showAddPersonForm">Add Person</button>
}

@if (showUpdatePerson)
{
    <EditForm Model="@person" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="card; modal" tabindex="-1" style="display:block" role="dialog">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h3 class="modal-title">Edit Person</h3>
                        <!-- Button to close the popup -->
                        <button type="button" class="close"
                                @onclick="CloseUpdatePerson">
                            <span aria-hidden="true">X</span>
                        </button>
                    </div>
                    <div class="card-header text-center">
                        <hr />
                        <h3>@fullName</h3>
                        <hr />
                    </div>
                    <div class="form-row">
                        <div class="form-group col-md-4">
                            <label>
                                First Name:
                            </label>
                            <InputText id="FirstName"
                                       @bind-Value="person.FirstName"
                                       class="form-control"
                                       maxlength="50"
                                       placeholder="First Name" />
                        </div>
                        <div class="form-group col-md-4">
                            <label>
                                Middle Name:
                            </label>
                            <InputText id="MiddleName"
                                       @bind-Value="person.MIddleName"
                                       class="form-control"
                                       maxlength="50"
                                       placeholder="Middle Name" />
                        </div>
                        <div class="form-group col-md-4">
                            <label>
                                Last Name:
                            </label>
                            <InputText id="LastName"
                                       @bind-Value="person.LastName"
                                       class="form-control"
                                       maxlength="50"
                                       placeholder="Last Name" />
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group col-md-4">
                            <label>
                                Gender:
                            </label>
                            <InputSelect id="cboGender"
                                         class="form-control"
                                         @bind-Value="person.Gender">
                                <option></option>
                                <option>Male</option>
                                <option>Female</option>
                            </InputSelect>
                        </div>
                        <div class="form-group col-md-4">
                            <label>
                                Age:
                            </label>
                            <InputNumber id="intAge2"
                                         class="form-control"
                                         @bind-Value="person.Age" />
                        </div>
                        <div class="form-group col-md-4">
                            <label>
                                Date of Birth:
                            </label>
                            <InputDate id="DateOfBirth"
                                       class="form-control"
                                       @bind-Value="person.DateOfBirth" />

                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group col-md-4">
                            <label>
                                City:
                            </label>
                            <InputText id="txtCity"
                                       class="form-control"
                                       maxlength="50"
                                       placeholder="City"
                                       @bind-Value="person.City" />
                        </div>
                        <div class="form-group col-md-4">
                            <label>
                                State:
                            </label>
                            <InputSelect id="cboState"
                                         class="form-control"
                                         @bind-Value="person.state">
                                @foreach (var state in person.birthState)
                                    {
                                    <option value="">@state.State</option>
                                    }
                            </InputSelect>
                        </div>
                        <div class="form-group col-md-4">
                            <label>
                                Country:
                            </label>
                            <InputText id="txtCountry"
                                       class="form-control"
                                       maxlength="50"
                                       placeholder="Country"
                                       @bind-Value="person.Country" />
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group col-md-4">
                            <button type="submit" class="btn btn-group-sm btn-primary" @onclick="UpdatePerson">Submit</button>
                            <button type="submit" class="btn btn-group-sm btn-primary" @onclick="CloseUpdatePerson">Cancel</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </EditForm>
}

@if(showAddPerson)
{
    <div class="card; modal" tabindex="-1" style="display:block" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h3 class="modal-title">Add Person</h3>
                    <!-- Button to close the popup -->
                    <button type="button" class="close"
                            @onclick="CloseAddPerson">
                        <span aria-hidden="true">X</span>
                    </button>
                </div>
            </div>
        </div>
    </div>
}

@*
<EditForm Model="@birthState">
    @if (birthStateList != null)
    {
        <InputSelect id="State" class="form-control" @bind-Value="StateId">
            @foreach (var state in birthStateList)
                {
                <option value="@state.StateId">@state.State</option>
                }
            <option></option>
        </InputSelect>
    }
</EditForm>
*@

@code
{
    List<BirthState> birthStateList;
    List<Person> personList;
    BirthState birthState = new BirthState();
    Person person = new Person();
    SeriLog_Logger seriLogger = new SeriLog_Logger();

    public string StateId = string.Empty;
    public string fullName = string.Empty;
    public bool showAddPerson = false;
    public bool showUpdatePerson = false;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            personList = await FamilyService.GetPeople();
            birthStateList = await FamilyService.GetBirthStatesAsync();
            foreach (var person in personList)
            {
                person.birthState = birthStateList;
                person.state = GetBirthState(person);
            }
        }
        catch (Exception ex)
        {
            seriLogger.WriteError(ex.Message);
        }
    }

    private void HandleValidSubmit()
    {
        Console.WriteLine("OnValidSubmit");
    }

    private void EditPerson(Person personProfile)
    {
        try
        {
            showUpdatePerson = true;
            person = personProfile;
            fullName = personProfile.FirstName + " " + personProfile.LastName;
        }
        catch (Exception ex)
        {
            seriLogger.WriteError(ex.Message);
        }
    }

    private void CloseUpdatePerson()
    {
        showUpdatePerson = false;
    }

    private void showAddPersonForm()
    {
        showAddPerson = true;
    }

    private void CloseAddPerson()
    {
        showAddPerson = false;
    }

    public string GetBirthState(Person person)
    {
        string stateName = string.Empty;

        foreach (var state in person.birthState)
        {
            if (person.StateId == state.StateId)
            {
                stateName = state.State;
                break;
            }
        }

        return stateName;
    }

    public async Task UpdatePerson()
    {
        foreach(var state in birthStateList)
        {
            if(person.state == state.State)
            {
                person.StateId = state.StateId;
            }
        }
        await FamilyService.UpdatePerson(person);
        showUpdatePerson = false;
    }
}
